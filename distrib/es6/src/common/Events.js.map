{"version":3,"sources":["src/common/Events.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAC;AAC5C,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAI5C,MAAM;IAWK,MAAM,KAAK,QAAQ;QACtB,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;IAC3B,CAAC;;AAZc,eAAQ,GAAgC,IAAI,WAAW,EAAiB,CAAC;AAE1E,qBAAc,GAAG,CAAC,WAAwC;IACpE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACf,MAAM,IAAI,iBAAiB,CAAC,aAAa,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC;AAClC,CAAC,CAAA","file":"Events.js","sourcesContent":["import { ArgumentNullError } from \"./Error\";\r\nimport { EventSource } from \"./EventSource\";\r\nimport { IEventSource } from \"./IEventSource\";\r\nimport { PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class Events {\r\n    private static instance: IEventSource<PlatformEvent> = new EventSource<PlatformEvent>();\r\n\r\n    public static SetEventSource = (eventSource: IEventSource<PlatformEvent>): void => {\r\n        if (!eventSource) {\r\n            throw new ArgumentNullError(\"eventSource\");\r\n        }\r\n\r\n        Events.instance = eventSource;\r\n    }\r\n\r\n    public static get Instance(): IEventSource<PlatformEvent> {\r\n        return Events.instance;\r\n    }\r\n}\r\n"]}
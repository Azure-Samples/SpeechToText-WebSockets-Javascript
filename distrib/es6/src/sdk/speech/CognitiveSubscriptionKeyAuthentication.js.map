{"version":3,"sources":["src/sdk/speech/CognitiveSubscriptionKeyAuthentication.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAW,aAAa,EAAE,MAAM,sBAAsB,CAAC;AACjF,OAAO,EAAE,QAAQ,EAAmB,MAAM,mBAAmB,CAAC;AAE9D,MAAM,UAAU,GAAW,2BAA2B,CAAC;AAEvD,MAAM;IAGF,YAAY,eAAuB;QAQ5B,UAAK,GAAG,CAAC,gBAAwB;YACpC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC,CAAA;QAEM,kBAAa,GAAG,CAAC,gBAAwB;YAC5C,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC,CAAA;QAbG,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QACnD,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;IAC9D,CAAC;CASJ","file":"CognitiveSubscriptionKeyAuthentication.js","sourcesContent":["import { ArgumentNullError, Promise, PromiseHelper } from \"../../common/Exports\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\r\n\r\nconst AuthHeader: string = \"Ocp-Apim-Subscription-Key\";\r\n\r\nexport class CognitiveSubscriptionKeyAuthentication implements IAuthentication {\r\n    private authInfo: AuthInfo;\r\n\r\n    constructor(subscriptionKey: string) {\r\n        if (!subscriptionKey) {\r\n            throw new ArgumentNullError(\"subscriptionKey\");\r\n        }\r\n\r\n        this.authInfo = new AuthInfo(AuthHeader, subscriptionKey);\r\n    }\r\n\r\n    public Fetch = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return PromiseHelper.FromResult(this.authInfo);\r\n    }\r\n\r\n    public FetchOnExpiry = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return PromiseHelper.FromResult(this.authInfo);\r\n    }\r\n}\r\n"]}